[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "project-zohar"
version = "0.1.0"
description = "A privacy-focused AI assistant with local deployment capabilities"
readme = "README.md"
requires-python = ">=3.10,<3.13"
license = {text = "MIT"}
authors = [
    {name = "Project Zohar Team", email = "team@projectzohar.com"},
]
keywords = ["ai", "assistant", "local", "privacy", "camel-ai", "ollama"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "camel-ai[all]>=0.1.0",
    "ollama>=0.1.0",
    "chromadb>=0.4.0",
    "sentence-transformers>=2.2.0",
    "unstructured[local-inference]>=0.10.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.20",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "authlib>=1.2.0",
    "requests>=2.31.0",
    "aiofiles>=23.0.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "watchdog>=3.0.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.0",
    "PyYAML>=6.0.0",
    "cryptography>=41.0.0",
    "pillow>=10.0.0",
    "python-magic>=0.4.0",
    "pytesseract>=0.3.10",
    "opencv-python>=4.8.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "psutil>=5.9.0",
    "schedule>=1.2.0",
    "httpx>=0.25.0",
    "websockets>=11.0.0",
    "gradio>=4.0.0",
    "streamlit>=1.28.0",
    "chardet>=5.2.0",
    "ydata-profiling>=4.5.0",
    "beautifulsoup4>=4.12.0",
    "python-docx>=0.8.11",
    "PyPDF2>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocs-mermaid2-plugin>=1.1.0",
]

[project.urls]
Homepage = "https://github.com/your-org/project-zohar"
Repository = "https://github.com/your-org/project-zohar"
Documentation = "https://your-org.github.io/project-zohar"
Issues = "https://github.com/your-org/project-zohar/issues"

[project.scripts]
zohar = "cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
